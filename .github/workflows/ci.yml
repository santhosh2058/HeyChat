name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend (Express + Jest)
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:7
        ports: ["27017:27017"]
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      MONGO_URI: ${{ secrets.MONGO_URI_TEST }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - run: npm ci
        working-directory: backend

      - run: npm run lint --if-present
        working-directory: backend

      - run: npm test -- --coverage
        working-directory: backend

  frontend:
    name: Frontend (React + Vitest + Build)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - run: npm ci
        working-directory: frontend

      - run: npm run lint --if-present
        working-directory: frontend

      - run: npm test -- --coverage
        working-directory: frontend

      - run: npm run build
        working-directory: frontend

      - uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
